/* Color styles */
$colors: (
  light: (
    text: (
      100: hsl(199 83% 9%),
      200: hsl(199 83% 11%),
    ),
    surface: (
      100: hsl(var(--h) var(--s) 100%),
      200: hsl(var(--h) var(--s) var(--l)),
      300: hsl(var(--h) var(--s) 90%),
      400: hsl(var(--h) var(--s) 80%),
    ),
    "purple": (
      100: hsl(250 55% 55%),
    ),
    "blue": (
      100: hsl(218 67% 57%),
      200: hsl(218 67% 53%),
    ),
    "red": (
      100: hsl(0, 72%, 85%),
      200: hsl(0, 72%, 51%),
    ),
    gradient: (
      100:
        linear-gradient(
          90deg,
          rgba(100, 79, 204, 0.9) 0%,
          rgba(70, 124, 219, 0.9) 100%
        ),
    ),
  ),
  dark: (
    text: (
      100: hsl(220 53% 85%),
      200: hsl(220 80% 80%),
    ),
    surface: (
      100: hsl(var(--h) var(--s) 8%),
      200: hsl(var(--h) var(--s) 10%),
      300: hsl(var(--h) var(--s) 16%),
      400: hsl(var(--h) var(--s) 20%),
    ),
    "purple": (
      100: hsl(250 55% 55%),
    ),
    "blue": (
      100: hsl(218 67% 57%),
      200: hsl(218 67% 53%),
    ),
    "red": (
      100: hsl(0, 52%, 85%),
      200: hsl(0, 52%, 51%),
    ),
    gradient: (
      100: hsl(var(--h) var(--s) 8% / 0.9),
    ),
  ),
);

@mixin color-scheme($type: light) {
  --accent: var(--accent-#{$type});
  @each $prop, $value in map-get($colors, $type) {
    @each $shade, $val in $value {
      --#{$prop}-#{$shade}: #{$val};
    }
  }
}

:root {
  --h: 220;
  --s: 11%;
  --l: 96%;

  @include color-scheme(light);
}

[color-scheme="dark"] {
  @include color-scheme(dark);
}

[color-scheme="light"] {
  @include color-scheme(light);
}

@media (prefers-color-scheme: dark) {
  :root {
    @include color-scheme(dark);
  }
  .title .line::before {
    background: url("../images/tooldm.svg") no-repeat center center;
  }
}
